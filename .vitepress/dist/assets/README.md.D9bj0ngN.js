import{_ as t,c as i,o as a,ah as n}from"./chunks/framework.jIf0XGuT.js";const g=JSON.parse('{"title":"FxJSON 🔥 - High-Performance JSON Parser for Go","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md","lastUpdated":1755495313000}'),e={name:"README.md"};function r(l,s,h,d,k,p){return a(),i("div",null,s[0]||(s[0]=[n(`<p><a href="https://pkg.go.dev/github.com/icloudza/fxjson?utm_source=godoc" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/api-reference-blue.svg?style=flat-square" alt="Go Doc"></a><a href="https://golang.org/" target="_blank" rel="noreferrer"><img src="https://img.shields.io/badge/go-%3E%3D1.18-blue.svg" alt="Go Version"></a><a href="./LICENSE.html"><img src="https://img.shields.io/badge/license-MIT-green.svg" alt="License"></a><a href="#performance-comparison"><img src="https://img.shields.io/badge/performance-fast-orange.svg" alt="Performance"></a></p><p><a href="./README_ZH.html">📄 中文文档 / Chinese Documentation</a></p><h1 id="fxjson-🔥-high-performance-json-parser-for-go" tabindex="-1">FxJSON 🔥 - High-Performance JSON Parser for Go <a class="header-anchor" href="#fxjson-🔥-high-performance-json-parser-for-go" aria-label="Permalink to “FxJSON 🔥 - High-Performance JSON Parser for Go”">​</a></h1><p>FxJSON is a Go JSON parsing library focused on performance, providing efficient JSON traversal and access capabilities. It offers improved performance compared to the standard library while maintaining memory safety and ease of use.</p><h2 id="🚀-core-features" tabindex="-1">🚀 Core Features <a class="header-anchor" href="#🚀-core-features" aria-label="Permalink to “🚀 Core Features”">​</a></h2><ul><li><strong>🔥 High Performance</strong>: Up to 67x faster array traversal, 20x faster object traversal</li><li><strong>⚡ Memory Efficient</strong>: Zero-allocation core operations</li><li><strong>🛡️ Memory Safety</strong>: Proper boundary checking and safety mechanisms</li><li><strong>🎯 Easy to Use</strong>: Chainable calls with intuitive API design</li><li><strong>🔧 Feature Complete</strong>: Advanced querying, data validation, caching, and more</li></ul><h2 id="📦-installation" tabindex="-1">📦 Installation <a class="header-anchor" href="#📦-installation" aria-label="Permalink to “📦 Installation”">​</a></h2><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">go</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github.com/icloudza/fxjson</span></span></code></pre></div><h2 id="🎯-quick-start" tabindex="-1">🎯 Quick Start <a class="header-anchor" href="#🎯-quick-start" aria-label="Permalink to “🎯 Quick Start”">​</a></h2><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">package</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fmt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">github.com/icloudza/fxjson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    jsonData </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;name&quot;: &quot;Alice&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;age&quot;: 30,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;profile&quot;: {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;city&quot;: &quot;Beijing&quot;,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;hobby&quot;: &quot;coding&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        }</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    }\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    node </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> fxjson.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">FromBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jsonData)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // Safe access with default values</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Unknown&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IntOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    city </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">GetPath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;profile.city&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, Age: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">, City: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name, age, city)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="📊-performance-highlights" tabindex="-1">📊 Performance Highlights <a class="header-anchor" href="#📊-performance-highlights" aria-label="Permalink to “📊 Performance Highlights”">​</a></h2><table tabindex="0"><thead><tr><th>Operation</th><th>FxJSON</th><th>Standard Library</th><th>Performance Gain</th></tr></thead><tbody><tr><td>Array Traversal</td><td>30.27 ns</td><td>2044 ns</td><td><strong>67.5x faster</strong></td></tr><tr><td>Object Traversal</td><td>104.7 ns</td><td>2115 ns</td><td><strong>20.2x faster</strong></td></tr><tr><td>Cached Parsing</td><td>1,396 ns</td><td>5,542 ns</td><td><strong>4x faster</strong></td></tr></tbody></table><h2 id="🚀-key-features" tabindex="-1">🚀 Key Features <a class="header-anchor" href="#🚀-key-features" aria-label="Permalink to “🚀 Key Features”">​</a></h2><h3 id="zero-allocation-traversal" tabindex="-1">Zero-Allocation Traversal <a class="header-anchor" href="#zero-allocation-traversal" aria-label="Permalink to “Zero-Allocation Traversal”">​</a></h3><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 67x faster than standard library</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">users.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ArrayForEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">user</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> fxjson</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Node</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Printf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;User </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">%s\\n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><h3 id="safe-default-values" tabindex="-1">Safe Default Values <a class="header-anchor" href="#safe-default-values" aria-label="Permalink to “Safe Default Values”">​</a></h3><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// No error handling needed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">StringOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Unknown&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;age&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IntOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">active </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;active&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BoolOr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="built-in-validation" tabindex="-1">Built-in Validation <a class="header-anchor" href="#built-in-validation" aria-label="Permalink to “Built-in Validation”">​</a></h3><div class="language-go"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> node.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">IsValidEmail</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    fmt.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;✅ Valid email&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="advanced-features" tabindex="-1">Advanced Features <a class="header-anchor" href="#advanced-features" aria-label="Permalink to “Advanced Features”">​</a></h3><ul><li>SQL-style querying and filtering</li><li>Data aggregation and statistics</li><li>High-performance caching</li><li>Struct encoding/decoding</li><li>Nested JSON expansion</li><li>Batch operations</li></ul><h2 id="📚-complete-documentation" tabindex="-1">📚 Complete Documentation <a class="header-anchor" href="#📚-complete-documentation" aria-label="Permalink to “📚 Complete Documentation”">​</a></h2><p>For comprehensive tutorials, advanced examples, and detailed API reference, visit our wiki:</p><p><strong>🔗 <a href="https://github.com/icloudza/fxjson/wiki" target="_blank" rel="noreferrer">Complete Documentation Wiki</a></strong></p><p>The wiki includes:</p><ul><li>Detailed tutorials and examples</li><li>Advanced features and best practices</li><li>Real-world usage scenarios</li><li>Performance optimization guides</li><li>Complete API reference</li></ul><h2 id="🤝-contributing" tabindex="-1">🤝 Contributing <a class="header-anchor" href="#🤝-contributing" aria-label="Permalink to “🤝 Contributing”">​</a></h2><p>Issues and Pull Requests are welcome!</p><h2 id="📄-license" tabindex="-1">📄 License <a class="header-anchor" href="#📄-license" aria-label="Permalink to “📄 License”">​</a></h2><p>MIT License - see <a href="./LICENSE.html">LICENSE</a> file for details</p><p><strong>FxJSON - Make JSON parsing fly!</strong> 🚀</p><hr><h2 id="📊-complete-benchmark-results" tabindex="-1">📊 Complete Benchmark Results <a class="header-anchor" href="#📊-complete-benchmark-results" aria-label="Permalink to “📊 Complete Benchmark Results”">​</a></h2><h3 id="core-operations-performance" tabindex="-1">Core Operations Performance <a class="header-anchor" href="#core-operations-performance" aria-label="Permalink to “Core Operations Performance”">​</a></h3><table tabindex="0"><thead><tr><th>Operation</th><th>FxJSON</th><th>Standard Library</th><th>Performance Gain</th><th>Memory Advantage</th></tr></thead><tbody><tr><td>Get</td><td>24.88 ns</td><td>2012 ns</td><td><strong>80.8x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>GetPath</td><td>111.5 ns</td><td>2055 ns</td><td><strong>18.4x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Int Conversion</td><td>16.70 ns</td><td>2026 ns</td><td><strong>121.3x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Float Conversion</td><td>7.688 ns</td><td>2051 ns</td><td><strong>266.7x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Bool Conversion</td><td>3.684 ns</td><td>2149 ns</td><td><strong>583.2x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>String Access</td><td>5.402 ns</td><td>2083 ns</td><td><strong>385.6x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Array Length</td><td>20.70 ns</td><td>2152 ns</td><td><strong>103.9x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Array Index</td><td>18.42 ns</td><td>2134 ns</td><td><strong>115.9x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Key Existence</td><td>0.2454 ns</td><td>2110 ns</td><td><strong>8598x faster</strong></td><td>0 vs 1984 B</td></tr></tbody></table><h3 id="traversal-operations" tabindex="-1">Traversal Operations <a class="header-anchor" href="#traversal-operations" aria-label="Permalink to “Traversal Operations”">​</a></h3><table tabindex="0"><thead><tr><th>Operation</th><th>FxJSON</th><th>Standard Library</th><th>Performance Gain</th><th>Memory Advantage</th></tr></thead><tbody><tr><td>Object ForEach</td><td>108.9 ns</td><td>2142 ns</td><td><strong>19.7x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Array ForEach</td><td>30.21 ns</td><td>2119 ns</td><td><strong>70.2x faster</strong></td><td>0 vs 1984 B</td></tr><tr><td>Deep Walk</td><td>1536 ns</td><td>2891 ns</td><td><strong>1.9x faster</strong></td><td>3056 vs 2289 B</td></tr><tr><td>Complex Traversal</td><td>1310 ns</td><td>3505 ns</td><td><strong>2.7x faster</strong></td><td>0 vs 4136 B</td></tr><tr><td>Large Data Traversal</td><td>12.8 µs</td><td>17.4 µs</td><td><strong>1.4x faster</strong></td><td>19136 vs 14698 B</td></tr></tbody></table><h3 id="struct-operations" tabindex="-1">Struct Operations <a class="header-anchor" href="#struct-operations" aria-label="Permalink to “Struct Operations”">​</a></h3><table tabindex="0"><thead><tr><th>Operation</th><th>FxJSON</th><th>Standard Library</th><th>Performance Gain</th><th>Memory Advantage</th></tr></thead><tbody><tr><td>Basic Decode</td><td>967.8 ns</td><td>1877 ns</td><td><strong>1.9x faster</strong></td><td>256 vs 736 B</td></tr><tr><td>DecodeStruct</td><td>939.5 ns</td><td>-</td><td>-</td><td>256 B</td></tr><tr><td>DecodeStructFast</td><td>868.6 ns</td><td>-</td><td>-</td><td>256 B</td></tr><tr><td>Complex Decode</td><td>2668 ns</td><td>3355 ns</td><td><strong>1.3x faster</strong></td><td>592 vs 1520 B</td></tr><tr><td>Large Decode</td><td>9.53 µs</td><td>11.8 µs</td><td><strong>1.2x faster</strong></td><td>1864 vs 4640 B</td></tr></tbody></table><h3 id="advanced-features-performance" tabindex="-1">Advanced Features Performance <a class="header-anchor" href="#advanced-features-performance" aria-label="Permalink to “Advanced Features Performance”">​</a></h3><table tabindex="0"><thead><tr><th>Feature</th><th>Operation Time</th><th>Memory Usage</th><th>Allocations</th><th>Note</th></tr></thead><tbody><tr><td>Basic Parsing</td><td>5,290 ns</td><td>6,448 B</td><td>45 allocs</td><td>Standard JSON parsing</td></tr><tr><td><strong>Cached Parsing</strong></td><td><strong>641.8 ns</strong></td><td><strong>20 B</strong></td><td><strong>2 allocs</strong></td><td><strong>8.2x faster, 99.7% less memory</strong></td></tr><tr><td>Simple Query</td><td>3,386 ns</td><td>640 B</td><td>14 allocs</td><td>Basic filtering</td></tr><tr><td>Complex Query</td><td>4,986 ns</td><td>1,720 B</td><td>52 allocs</td><td>Multi-condition with sort</td></tr><tr><td>Data Aggregation</td><td>4,804 ns</td><td>2,640 B</td><td>32 allocs</td><td>Statistical operations</td></tr><tr><td>Data Transformation</td><td>478.7 ns</td><td>368 B</td><td>5 allocs</td><td>Field mapping &amp; conversion</td></tr><tr><td>Data Validation</td><td>216.6 ns</td><td>360 B</td><td>4 allocs</td><td>Rule-based validation</td></tr><tr><td>Stream Processing</td><td>3,250 ns</td><td>0 B</td><td>0 allocs</td><td>Zero-allocation streaming</td></tr><tr><td>Large Data Query</td><td>1.28 ms</td><td>80 B</td><td>2 allocs</td><td>100 records processing</td></tr><tr><td>JSON Diff</td><td>18.2 µs</td><td>2,787 B</td><td>197 allocs</td><td>Change detection</td></tr><tr><td>Empty String Handling</td><td>2,777 ns</td><td>1,664 B</td><td>27 allocs</td><td>Safe empty string processing</td></tr></tbody></table><h3 id="serialization-performance" tabindex="-1">Serialization Performance <a class="header-anchor" href="#serialization-performance" aria-label="Permalink to “Serialization Performance”">​</a></h3><table tabindex="0"><thead><tr><th>Operation</th><th>Time</th><th>Memory</th><th>Allocations</th><th>Note</th></tr></thead><tbody><tr><td>Marshal</td><td>652.1 ns</td><td>424 B</td><td>9 allocs</td><td>Standard serialization</td></tr><tr><td>FastMarshal</td><td>226.7 ns</td><td>136 B</td><td>2 allocs</td><td>High-performance serialization</td></tr><tr><td>StructMarshal</td><td>267.1 ns</td><td>136 B</td><td>2 allocs</td><td>Direct struct serialization</td></tr></tbody></table><h3 id="default-value-functions" tabindex="-1">Default Value Functions <a class="header-anchor" href="#default-value-functions" aria-label="Permalink to “Default Value Functions”">​</a></h3><table tabindex="0"><thead><tr><th>Function</th><th>Time</th><th>Memory</th><th>Allocations</th></tr></thead><tbody><tr><td>StringOr</td><td>23.56 ns</td><td>0 B</td><td>0 allocs</td></tr><tr><td>IntOr</td><td>28.34 ns</td><td>0 B</td><td>0 allocs</td></tr><tr><td>FloatOr</td><td>40.89 ns</td><td>0 B</td><td>0 allocs</td></tr></tbody></table><p><em>Benchmark results on Apple M4 Pro, Go 1.24.6</em></p>`,46)]))}const E=t(e,[["render",r]]);export{g as __pageData,E as default};
